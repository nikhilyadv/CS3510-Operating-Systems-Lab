alias functionNum R1;
alias pid R2;
if (functionNum == 2) then		//Free User Area Page
	alias UserAreaPage R3;
	UserAreaPage = [PROCESS_TABLE + (pid * 16) + 11];
	multipush(R1,R2);
	R1 = 2;
	R2 = UserAreaPage;
	call MOD_2;
	multipop(R1,R2);
	return;
endif;
if (functionNum == 3) then			//Exit
	multipush(R1,R2);
	R1 = 4;			//Free page table
	R2 = pid;
	call MOD_1;
	//multipop(R1,R2);
	//multipush(R1,R2);
	R1 = 2;			//Free User are page
	R2 = pid;
	call MOD_1;
	multipop(R1,R2);
	[PROCESS_TABLE + (pid * 16) + 4] = TERMINATED;
	return;
endif;
if (functionNum == 4) then			//Free Page Table
	alias ptbr R3;
	alias ptlr R4;
	ptbr = [PROCESS_TABLE + (pid * 16) + 14];
	ptlr = [PROCESS_TABLE + (pid * 16) + 15];
	alias counter R5;
	counter = 0;
	while (counter < ptlr) do
		if ([ptbr+ 2 * counter] != -1) then
			multipush(R1,R2,R3,R4,R5);
			R1 = 2;
			R2 = [ptbr+ 2 * counter];
			call MOD_2;
			multipop(R1,R2,R3,R4,R5);
		endif;
		[ptbr+ 2 * counter] = -1;
		[ptbr+ 2 * counter + 1] = "0000";
		counter = counter + 1;
	endwhile;
	counter = 0;			//2,3,8,9
	while(counter < 10) do
		if (counter == 2 || counter == 3 || counter == 8 || counter == 9) then
			if ([DISK_MAP_TABLE + pid*10 + counter] != -1) then
				multipush(R1,R2,R5);
				R1 = 4;
				R3 = R2;
				R2 = [DISK_MAP_TABLE + pid*10 + counter];
				call MOD_2;
				multipop(R1,R2,R5);
			endif;
		endif;
		[DISK_MAP_TABLE + pid*10 + counter] = -1;
		counter = counter + 1;
	endwhile;
	return;
endif;